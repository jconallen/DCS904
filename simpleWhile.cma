; Implementation of the following code snippet
;
;    int prev2 = 0;
;    int prev1 = 1;
;    int fib = prev1 + prev2;
;    
;    while( fib < 25 ) {
;        printf("%d\n", fib );
;        fib = prev1 + prev2;
;        prev2 = prev1;
;        prev1 = fib;
;    }
;

        alloc 1    ; allocate space for the variable prev2
        loadc 0    ; put the constant 0 on the stack
        storea 0   ; stores the value at top of stack in variable prev2 (addr 0)
        alloc 1    ; allocate space for the variable prev2
        loadc 1    ; put the constant 1 on the stack
        storea 1   ; stores the value at top of stack in variable prev1 (addr 1)
        alloc 1    ; space for variable fib (addr 2)
        loada 0    ; put prev2 on stack
        loada 1    ; put prev1 on stack
        add        ; add them (prev1 + prev2)
        storea 2   ; store the result in fib
 top:   loadc 25   ; put constant 25 on stack
        loada 2    ; put fib on top of stack
        geq        ; compute fib >= 25, leave result on top of stack
        jumpz end  ; if the cond is 0 then jump to end
        loada 2    ; put fib on stack
        print      ; print to output
        loadc '\n' ; put new line on stack ( decimal 10)
        print      ; 
        loada 0    ; put prev2 on stack
        loada 1    ; put prev1 on stack
        add        ; add prev1 + prev2
        storea 2   ; put in fib (fib = prev1+ prev2)
        loada 1    ; put prev1 on top of stack
        storea 0   ; store in prev2 (prev2 = prev1)
        loada 2    ; put fib on top of stack
        storea 1   ; put in prev1 (prev1 = fib)
        jump top   ; go back to top of loop
end:    halt       ; end of this snippet, but normally would be next
                   ; statement in the flow.
      
